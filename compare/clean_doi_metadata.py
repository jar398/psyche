# -*- coding: utf-8 -*-

# Input: the file generated by get_doi_metadata.py (all-doi-metadata.csv)
# Output: a table of contents CSV file similar to that generated by toc_to_csv.py

import sys, csv

def clean(path):
    with open(path, 'r') as infile:
        reader = csv.reader(infile)
        header = reader.next() #volume,issue,start page,end page,year,doi,title,authors
        records = []
        for (volume, issue, start_page, end_page, year, doi, title, authors) in reader:
            records.append([volume,
                            clean_issue(issue),
                            start_page, 
                            end_page,
                            year,
                            doi,
                            clean_title(title),
                            clean_authors(authors)])
    with open('clean-doi-metadata.csv', 'w') as outfile:
        writer = csv.writer(outfile)
        writer.writerow(header)
        for record in sorted(records, key=record_sort_key):
            writer.writerow(record)

def record_sort_key(record):
    return (maybe_int(record[0]), # volume
            maybe_int(record[1].split('-')[0]),
            maybe_int(record[2]),
            maybe_int(record[3]),
            record[6])          # title as tie-breaker

def maybe_int(field):
    if field.isdigit():
        return int(field)
    else:
        return field

def clean_title(title):
    # These two seem to be different but I don't know how and can't see it
    title = title.replace('”', '"')
    title = title.replace('“', '"')

    title = title.replace('œ', 'oe')
    title = title.replace('Œ', 'Oe')
    title = title.replace('æ', 'ae')
    title = title.replace('Æ', 'Ae')
    return title

def clean_authors(authors):
    alist = authors.split(';')
    return ';'.join(map(clean_author, alist))

def clean_author(author):
    # Lose information (the point of first/last inflection).  Not sure how to deal with this
    author = author.replace(', Jr.', '$$')
    parts = author.split(', ')
    if len(parts) == 2:
        author = "%s %s" % (parts[1], parts[0])
    author = author.replace('$$', ', Jr.')
    return author

def clean_issue(issue):
    # Do something like 'supplement' => 'Supplement' ??
    return issue

clean(sys.argv[1])
